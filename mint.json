{
  "$schema": "https://mintlify.com/schema.json",
  "name": "YosefLab/Cassiopeia",
  "favicon": "/favicon.svg",
  "colors": {
    "primary": "#0D9373",
    "light": "#07C983",
    "dark": "#0D9373",
    "anchors": {
      "from": "#0D9373",
      "to": "#07C983"
    }
  },
  "tabs": [
    {
      "name": "Detailed Code Docs",
      "url": "detailed-code-docs"
    }
  ],
  "navigation": [
    {
      "group": "Project Root",
      "pages": [
        "detailed-code-docs/project_root",
        "detailed-code-docs/build.py",
        "detailed-code-docs/codecov.yml",
        "detailed-code-docs/conftest.py",
        "detailed-code-docs/version.py",
        "detailed-code-docs/pyproject.toml",
        "detailed-code-docs/.readthedocs.yml",
        "detailed-code-docs/README.md",
        "detailed-code-docs/setup.py",
        {
          "group": "test",
          "pages": [
            "detailed-code-docs/test/overview",
            {
              "group": "preprocess_tests",
              "pages": [
                "detailed-code-docs/test/preprocess_tests/overview",
                "detailed-code-docs/test/preprocess_tests/convert_fastqs_to_unmapped_bam_test.py",
                "detailed-code-docs/test/preprocess_tests/call_lineage_groups_test.py",
                "detailed-code-docs/test/preprocess_tests/character_matrix_test.py",
                "detailed-code-docs/test/preprocess_tests/error_correct_intbcs_to_whitelist_test.py",
                "detailed-code-docs/test/preprocess_tests/filter_molecule_table_test.py",
                "detailed-code-docs/test/preprocess_tests/filter_bam_test.py",
                "detailed-code-docs/test/preprocess_tests/collapse_umi_test.py",
                "detailed-code-docs/test/preprocess_tests/align_sequence_test.py",
                "detailed-code-docs/test/preprocess_tests/error_correct_cellbcs_to_whitelist_test.py",
                "detailed-code-docs/test/preprocess_tests/config_parser_test.py",
                "detailed-code-docs/test/preprocess_tests/call_alleles_test.py",
                "detailed-code-docs/test/preprocess_tests/resolve_umi_sequence_test.py",
                "detailed-code-docs/test/preprocess_tests/error_correct_umi_test.py"
              ]
            },
            {
              "group": "mixin_tests",
              "pages": [
                "detailed-code-docs/test/mixin_tests/overview",
                "detailed-code-docs/test/mixin_tests/mixin_utilities_test.py"
              ]
            },
            {
              "group": "plotting_tests",
              "pages": [
                "detailed-code-docs/test/plotting_tests/overview",
                "detailed-code-docs/test/plotting_tests/itol_plotting_test.py",
                "detailed-code-docs/test/plotting_tests/local_test.py",
                "detailed-code-docs/test/plotting_tests/local_3d_test.py",
                "detailed-code-docs/test/plotting_tests/utilities_test.py"
              ]
            },
            {
              "group": "data_tests",
              "pages": [
                "detailed-code-docs/test/data_tests/overview",
                "detailed-code-docs/test/data_tests/layers_test.py",
                "detailed-code-docs/test/data_tests/cassiopeia_tree_test.py",
                "detailed-code-docs/test/data_tests/data_utilities_test.py"
              ]
            },
            {
              "group": "solver_tests",
              "pages": [
                "detailed-code-docs/test/solver_tests/overview",
                "detailed-code-docs/test/solver_tests/ccphylo_solver_test.py",
                "detailed-code-docs/test/solver_tests/spectral_test.py",
                "detailed-code-docs/test/solver_tests/dissimilarity_functions_test.py",
                "detailed-code-docs/test/solver_tests/percolation_test.py",
                "detailed-code-docs/test/solver_tests/maxcut_test.py",
                "detailed-code-docs/test/solver_tests/hybrid_solver_test.py",
                "detailed-code-docs/test/solver_tests/neighborjoining_solver_test.py",
                "detailed-code-docs/test/solver_tests/snj_solver_test.py",
                "detailed-code-docs/test/solver_tests/greedy_variants_test.py",
                "detailed-code-docs/test/solver_tests/sharedmutationjoiner_test.py",
                "detailed-code-docs/test/solver_tests/ilp_solver_test.py",
                "detailed-code-docs/test/solver_tests/vanillagreedy_test.py",
                "detailed-code-docs/test/solver_tests/upgma_test.py"
              ]
            },
            {
              "group": "simulator_tests",
              "pages": [
                "detailed-code-docs/test/simulator_tests/overview",
                "detailed-code-docs/test/simulator_tests/brownian_spatial_simulator_test.py",
                "detailed-code-docs/test/simulator_tests/sequential_lineage_tracing_simulator_test.py",
                "detailed-code-docs/test/simulator_tests/unifom_leaf_subsampler_test.py",
                "detailed-code-docs/test/simulator_tests/spatial_leaf_subsampler_test.py",
                "detailed-code-docs/test/simulator_tests/supercellular_sampler_test.py",
                "detailed-code-docs/test/simulator_tests/ecdna_birth_death_simulator_test.py",
                "detailed-code-docs/test/simulator_tests/cas9_lineage_tracing_simulator_test.py",
                "detailed-code-docs/test/simulator_tests/clonal_spatial_simulator_test.py",
                "detailed-code-docs/test/simulator_tests/complete_binary_simulator_test.py",
                "detailed-code-docs/test/simulator_tests/birth_death_simulator_test.py",
                "detailed-code-docs/test/simulator_tests/simple_fit_subclone_simulator_test.py"
              ]
            },
            {
              "group": "critique_tests",
              "pages": [
                "detailed-code-docs/test/critique_tests/overview",
                "detailed-code-docs/test/critique_tests/compare_tree_test.py"
              ]
            },
            {
              "group": "tools_tests",
              "pages": [
                "detailed-code-docs/test/tools_tests/overview",
                "detailed-code-docs/test/tools_tests/small_parsimony_test.py",
                "detailed-code-docs/test/tools_tests/parameter_estimators_test.py",
                "detailed-code-docs/test/tools_tests/tree_metrics_test.py",
                "detailed-code-docs/test/tools_tests/topology_test.py",
                "detailed-code-docs/test/tools_tests/autocorrelation_test.py",
                "detailed-code-docs/test/tools_tests/coupling_test.py",
                {
                  "group": "fitness_estimator_tests",
                  "pages": [
                    "detailed-code-docs/test/tools_tests/fitness_estimator_tests/overview",
                    "detailed-code-docs/test/tools_tests/fitness_estimator_tests/lbi_jungle_test.py"
                  ]
                },
                {
                  "group": "branch_length_estimator_tests",
                  "pages": [
                    "detailed-code-docs/test/tools_tests/branch_length_estimator_tests/overview",
                    "detailed-code-docs/test/tools_tests/branch_length_estimator_tests/iid_exponential_mle_test.py",
                    "detailed-code-docs/test/tools_tests/branch_length_estimator_tests/iid_exponential_bayesian_test.py"
                  ]
                }
              ]
            }
          ]
        },
        {
          "group": "docs",
          "pages": [
            "detailed-code-docs/docs/overview",
            "detailed-code-docs/docs/conf.py",
            {
              "group": "_templates",
              "pages": [
                "detailed-code-docs/docs/_templates/overview",
                "detailed-code-docs/docs/_templates/layout.html"
              ]
            },
            {
              "group": "_static",
              "pages": [
                "detailed-code-docs/docs/_static/overview",
                {
                  "group": "css",
                  "pages": [
                    "detailed-code-docs/docs/_static/css/overview",
                    "detailed-code-docs/docs/_static/css/sphinx_gallery.css",
                    "detailed-code-docs/docs/_static/css/override.css"
                  ]
                }
              ]
            },
            {
              "group": "extensions",
              "pages": [
                "detailed-code-docs/docs/extensions/overview",
                "detailed-code-docs/docs/extensions/typed_returns.py"
              ]
            }
          ]
        },
        {
          "group": "cassiopeia",
          "pages": [
            "detailed-code-docs/cassiopeia/overview",
            "detailed-code-docs/cassiopeia/__init__.py",
            {
              "group": "tools",
              "pages": [
                "detailed-code-docs/cassiopeia/tools/overview",
                "detailed-code-docs/cassiopeia/tools/coupling.py",
                "detailed-code-docs/cassiopeia/tools/__init__.py",
                "detailed-code-docs/cassiopeia/tools/autocorrelation.py",
                "detailed-code-docs/cassiopeia/tools/topology.py",
                "detailed-code-docs/cassiopeia/tools/small_parsimony.py",
                "detailed-code-docs/cassiopeia/tools/parameter_estimators.py",
                "detailed-code-docs/cassiopeia/tools/tree_metrics.py",
                {
                  "group": "fitness_estimator",
                  "pages": [
                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/overview",
                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_lbi_jungle.py",
                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_FitnessEstimator.py",
                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/__init__.py",
                    {
                      "group": "_jungle",
                      "pages": [
                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/overview",
                        {
                          "group": "jungle",
                          "pages": [
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/overview",
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/tree.py",
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/size_matched_model.py",
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/sfs.py",
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/__init__.py",
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/forest.py",
                            {
                              "group": "resources",
                              "pages": [
                                "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/overview",
                                "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/__init__.py",
                                {
                                  "group": "FitnessInference",
                                  "pages": [
                                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/overview",
                                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/rank_sequences.py",
                                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/infer_fitness.py",
                                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/__init__.py",
                                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/README.md",
                                    {
                                      "group": "prediction_src",
                                      "pages": [
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/overview",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/ancestral.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/sequence_ranking.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/fitness_inference.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/__init__.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/node_ranking.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/tree_utils.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/FitnessInference/prediction_src/solve_survival.py"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "group": "betatree",
                                  "pages": [
                                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/betatree/overview",
                                    "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/betatree/__init__.py",
                                    {
                                      "group": "src",
                                      "pages": [
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/betatree/src/overview",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/betatree/src/sfs.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/betatree/src/betatree.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/betatree/src/__init__.py",
                                        "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/jungle/resources/betatree/src/sfs_py3.py"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "group": "reference_data",
                          "pages": [
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/reference_data/overview",
                            "detailed-code-docs/cassiopeia/tools/fitness_estimator/_jungle/reference_data/generate_annotate_forest.py"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "group": "branch_length_estimator",
                  "pages": [
                    "detailed-code-docs/cassiopeia/tools/branch_length_estimator/overview",
                    "detailed-code-docs/cassiopeia/tools/branch_length_estimator/_iid_exponential_bayesian_cpp.cpp",
                    "detailed-code-docs/cassiopeia/tools/branch_length_estimator/_iid_exponential_bayesian_cpp.h",
                    "detailed-code-docs/cassiopeia/tools/branch_length_estimator/IIDExponentialMLE.py",
                    "detailed-code-docs/cassiopeia/tools/branch_length_estimator/__init__.py",
                    "detailed-code-docs/cassiopeia/tools/branch_length_estimator/BranchLengthEstimator.py",
                    "detailed-code-docs/cassiopeia/tools/branch_length_estimator/IIDExponentialBayesian.py"
                  ]
                }
              ]
            },
            {
              "group": "mixins",
              "pages": [
                "detailed-code-docs/cassiopeia/mixins/overview",
                "detailed-code-docs/cassiopeia/mixins/logging.py",
                "detailed-code-docs/cassiopeia/mixins/warnings.py",
                "detailed-code-docs/cassiopeia/mixins/__init__.py",
                "detailed-code-docs/cassiopeia/mixins/errors.py",
                "detailed-code-docs/cassiopeia/mixins/utilities.py"
              ]
            },
            {
              "group": "preprocess",
              "pages": [
                "detailed-code-docs/cassiopeia/preprocess/overview",
                "detailed-code-docs/cassiopeia/preprocess/cassiopeia_preprocess.py",
                "detailed-code-docs/cassiopeia/preprocess/constants.py",
                "detailed-code-docs/cassiopeia/preprocess/__init__.py",
                "detailed-code-docs/cassiopeia/preprocess/setup_utilities.py",
                "detailed-code-docs/cassiopeia/preprocess/lineage_utils.py",
                "detailed-code-docs/cassiopeia/preprocess/UMI_utils.py",
                "detailed-code-docs/cassiopeia/preprocess/pipeline.py",
                "detailed-code-docs/cassiopeia/preprocess/map_utils.py",
                "detailed-code-docs/cassiopeia/preprocess/utilities.py",
                "detailed-code-docs/cassiopeia/preprocess/doublet_utils.py",
                "detailed-code-docs/cassiopeia/preprocess/alignment_utilities.py"
              ]
            },
            {
              "group": "solver",
              "pages": [
                "detailed-code-docs/cassiopeia/solver/overview",
                "detailed-code-docs/cassiopeia/solver/SharedMutationJoiningSolver.py",
                "detailed-code-docs/cassiopeia/solver/NeighborJoiningSolver.py",
                "detailed-code-docs/cassiopeia/solver/MaxCutSolver.py",
                "detailed-code-docs/cassiopeia/solver/DistanceSolver.py",
                "detailed-code-docs/cassiopeia/solver/__init__.py",
                "detailed-code-docs/cassiopeia/solver/MaxCutGreedySolver.py",
                "detailed-code-docs/cassiopeia/solver/missing_data_methods.py",
                "detailed-code-docs/cassiopeia/solver/graph_utilities.py",
                "detailed-code-docs/cassiopeia/solver/SpectralNeighborJoiningSolver.py",
                "detailed-code-docs/cassiopeia/solver/solver_utilities.py",
                "detailed-code-docs/cassiopeia/solver/UPGMASolver.py",
                "detailed-code-docs/cassiopeia/solver/SpectralGreedySolver.py",
                "detailed-code-docs/cassiopeia/solver/SpectralSolver.py",
                "detailed-code-docs/cassiopeia/solver/GreedySolver.py",
                "detailed-code-docs/cassiopeia/solver/dissimilarity_functions.py",
                "detailed-code-docs/cassiopeia/solver/VanillaGreedySolver.py",
                "detailed-code-docs/cassiopeia/solver/CassiopeiaSolver.py",
                "detailed-code-docs/cassiopeia/solver/PercolationSolver.py",
                "detailed-code-docs/cassiopeia/solver/HybridSolver.py",
                "detailed-code-docs/cassiopeia/solver/ILPSolver.py"
              ]
            },
            {
              "group": "simulator",
              "pages": [
                "detailed-code-docs/cassiopeia/simulator/overview",
                "detailed-code-docs/cassiopeia/simulator/DataSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/SequentialLineageTracingDataSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/CompleteBinarySimulator.py",
                "detailed-code-docs/cassiopeia/simulator/Cas9LineageTracingDataSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/BirthDeathFitnessSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/TreeSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/LeafSubsampler.py",
                "detailed-code-docs/cassiopeia/simulator/UniformLeafSubsampler.py",
                "detailed-code-docs/cassiopeia/simulator/SpatialDataSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/SimpleFitSubcloneSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/__init__.py",
                "detailed-code-docs/cassiopeia/simulator/BrownianSpatialDataSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/ecDNABirthDeathSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/SpatialLeafSubsampler.py",
                "detailed-code-docs/cassiopeia/simulator/ClonalSpatialDataSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/LineageTracingDataSimulator.py",
                "detailed-code-docs/cassiopeia/simulator/SupercellularSampler.py"
              ]
            },
            {
              "group": "plotting",
              "pages": [
                "detailed-code-docs/cassiopeia/plotting/overview",
                "detailed-code-docs/cassiopeia/plotting/local_3d.py",
                "detailed-code-docs/cassiopeia/plotting/local.py",
                "detailed-code-docs/cassiopeia/plotting/palettes.py",
                "detailed-code-docs/cassiopeia/plotting/__init__.py",
                "detailed-code-docs/cassiopeia/plotting/itol_utilities.py",
                "detailed-code-docs/cassiopeia/plotting/utilities.py"
              ]
            },
            {
              "group": "critique",
              "pages": [
                "detailed-code-docs/cassiopeia/critique/overview",
                "detailed-code-docs/cassiopeia/critique/critique_utilities.py",
                "detailed-code-docs/cassiopeia/critique/__init__.py",
                "detailed-code-docs/cassiopeia/critique/compare.py"
              ]
            },
            {
              "group": "data",
              "pages": [
                "detailed-code-docs/cassiopeia/data/overview",
                "detailed-code-docs/cassiopeia/data/CassiopeiaTree.py",
                "detailed-code-docs/cassiopeia/data/__init__.py",
                "detailed-code-docs/cassiopeia/data/utilities.py",
                "detailed-code-docs/cassiopeia/data/Layers.py"
              ]
            }
          ]
        },
        {
          "group": ".github",
          "pages": [
            "detailed-code-docs/.github/overview",
            {
              "group": "workflows",
              "pages": [
                "detailed-code-docs/github_workflows/overview",
                "detailed-code-docs/github_workflows/test.yml"
              ]
            }
          ]
        },
        "detailed-code-docs/.git"
      ]
    }
  ],
  "footerSocials": {
    "x": "https://x.com/agentic_labs",
    "linkedin": "https://www.linkedin.com/company/agentic-labs"
  }
}